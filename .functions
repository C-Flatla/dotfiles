#***********************************************************************#
#                             Useful functions                          #
#***********************************************************************#

# Sets the name of the tab
# Found from:
# http://thelucid.com/2012/01/04/naming-your-terminal-tabs-in-osx-lion/
function tab() {
  current_directory=${PWD##*/}
  printf "\e]1;${1:-$current_directory}\a"
}

# Sets the name of the window
# Found from:
# http://thelucid.com/2012/01/04/naming-your-terminal-tabs-in-osx-lion/
function winname() {
  printf "\e]2;$1\a"
}

# Prints out your current ip address
# Found from: http://apple.stackexchange.com/questions/20547/how-do-i-find-my-ip-address-from-the-command-line
function myip {
  # For Unix machines
  local_ip=`ifconfig | grep --color=never 'inet.*broadcast' | awk '{ printf "\t%s\n", $2}'`
  printf "Local:\n$local_ip"
  # printf "$local_ip" | pbcopy
  printf "\nExternal:\n\t"
  dig @resolver1.opendns.com myip.opendns.com -4 +short
  # If no dig use: (sudo apt-get install dnsutils)
  # curl http://ipecho.net/plain
}

function test_internet() {
  local_ip=`ifconfig | grep --color=never 'inet.*broadcast' | awk '{ printf "\t%s\n", $2}'`
  ping -c3 $local_ip
  echo ""
  ping 1.1.1.1
}

# Generates a string of the current git branch (only if in git like in cd())
# Found from: https://stackoverflow.com/a/1418022
# https://stackoverflow.com/a/2185353/7573616
function branch_name() {
  if git rev-parse --git-dir > /dev/null 2>&1; then
    git rev-parse --abbrev-ref HEAD
  fi
}

function branch_name_str() {
  if git rev-parse --git-dir > /dev/null 2>&1; then
    echo "(`branch_name`)"
  else
    echo ""
  fi
}

# Shows a spinner
# start_spinner "Waiting for foobar to finish"
# Found from: https://willcarh.art/blog/how-to-write-better-bash-spinners
function start_spinner {
    set +m
    echo -n "$1         "
    {
      while : ; do
        for X in '  •     ' '   •    ' '    •   ' '     •  ' '      • ' '     •  ' '    •   ' '   •    ' '  •     ' ' •      ' ; do
          echo -en "\b\b\b\b\b\b\b\b$X" ;
          sleep 0.1 ;
        done ;
      done &
    } 2>/dev/null
    spinner_pid=$!
}

function stop_spinner {
    { kill -9 $spinner_pid && wait; } 2>/dev/null
    set -m
    echo -en "\033[2K\r"
}

trap stop_spinner `seq 0 15`

if [[ $verbose_resource ]]; then echo "SOURCED .functions"; fi

# This should be the last line of the file
# For local changes
# Don't make edits below this
[ -f "$HOME/.functions.local" ] && source "$HOME/.functions.local"
